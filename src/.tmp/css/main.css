/******************************************************************************
 *
 * MAIN SCSS FILE
 *
 ******************************************************************************/
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
@import url("https://fonts.googleapis.com/css?family=Lato:300,300i,400,400i,900i");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*, *:before, *:after {
  box-sizing: border-box;
}

html, body {
  min-height: 100vh;
}

html {
  font-size: 10px;
}

body {
  background-color: #444;
  font-family: "Lato";
  font-size: 1.6rem;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

@media (min-width: 60em) {
  body {
    padding: 4.8rem 0;
    font-size: 1.6rem;
  }
}

a {
  color: #2d3e4e;
  font-weight: 900;
  font-style: italic;
  text-decoration: none;
  border-bottom: 2px dotted transparent;
  transition: all 0.25s;
}

a:hover {
  color: #52718f;
  border-color: #52718f;
}

h1 {
  font-size: 5rem;
  line-height: 0.9;
  font-weight: 300;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 3.6rem;
  line-height: 1.25;
  font-weight: 400;
}

h3 {
  font-size: 2rem;
  line-height: 1.25;
  font-weight: 400;
  text-transform: uppercase;
  color: #888;
  margin-top: 3rem;
}

img {
  display: block;
  max-width: 100%;
}

ul {
  padding-left: 0;
}

li {
  margin-bottom: 1.2rem;
  list-style-type: none;
}

.grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.grid > * {
  -ms-flex-positive: 1;
      flex-grow: 1;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

@media (min-width: 60em) {
  .grid.grid--50 > * {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
  }
  .grid.grid--50 > *:nth-child(odd) {
    padding-right: 1.2rem;
  }
  .grid.grid--50 > *:nth-child(even) {
    padding-left: 1.2rem;
  }
}

.cv {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  margin: 0 auto;
  background-color: white;
}

@media (min-width: 60em) {
  .cv {
    width: 54em;
    overflow: hidden;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.23), 0 10px 40px rgba(0, 0, 0, 0.19);
  }
}

.cv__head {
  background-color: #EE5722;
  color: white;
  text-align: center;
  overflow: hidden;
}

@media (min-width: 60em) {
  .cv__head {
    -ms-flex: 1 0 29%;
        flex: 1 0 29%;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.23), 0 10px 40px rgba(0, 0, 0, 0.19);
    z-index: 12;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
  }
}

.cv__foot {
  background-color: #EE5722;
  color: white;
  text-align: center;
  padding: 2.4rem;
}

@media (min-width: 60em) {
  .cv__foot {
    padding: 1.2rem;
    -ms-flex: 0 0 71%;
        flex: 0 0 71%;
    margin-left: 29%;
    box-shadow: -7cm 0 0 0 #eee;
    z-index: 12;
  }
}

.cv__main {
  background-color: white;
  color: #444;
  -ms-flex: 1;
      flex: 1;
}

@media (min-width: 60em) {
  .cv__main {
    -ms-flex: 1 0 71%;
        flex: 1 0 71%;
  }
}

.cv__main strong {
  font-weight: 900;
}

.user__name {
  position: absolute;
  display: inline-block;
  top: 0;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  margin: 0;
  padding: 1.2rem 4.8rem;
  text-align: center;
  color: white;
}

.user__name .name__last-name {
  display: inline-block;
  margin-left: -0.78rem;
}

.user__name:before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: -1;
  background-color: #2d3e4e;
  transform: skewX(-7deg);
  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.23), 0 3px 12px rgba(0, 0, 0, 0.16);
}

@media (min-width: 60em) {
  .user__name {
    display: block;
    left: auto;
    transform: translate3d(0%, -50%, 0);
    padding: 1.2rem 2.4rem;
    font-size: 4rem;
  }
}

.user__job {
  margin-bottom: 0;
  margin-top: 4.8rem;
  font-weight: 300;
  line-height: 1;
}

@media (min-width: 60em) {
  .user__job {
    margin-top: 2.4rem;
    font-size: 3rem;
  }
}

.user__media--hero {
  position: relative;
}

.user__media--hero .media {
  max-height: 40rem;
  overflow: hidden;
}

@media (min-width: 60em) {
  .user__media--hero .media {
    position: relative;
    height: 0;
    padding-bottom: 141.42%;
    max-height: none;
    background-color: white;
  }
  .user__media--hero .media__wrapper {
    position: absolute;
    width: 100%;
    top: 0;
    bottom: 0;
    overflow: hidden;
    background-color: #2d3e4e;
  }
  .user__media--hero .media__image {
    position: absolute;
    top: -10%;
    right: -50%;
    max-width: none;
    max-width: 336%;
  }
}

.user__media--round {
  display: inline-block;
  width: 100%;
  max-width: 28rem;
  padding: 2.4rem;
  margin: 2.4rem 0;
}

.user__media--round .media {
  position: relative;
  height: 0;
  padding-bottom: 100%;
  border-radius: 50%;
  box-shadow: 0 0 0 2.4rem #f38d69;
}

.user__media--round .media__wrapper {
  position: absolute;
  width: 100%;
  top: 0;
  bottom: 0;
  overflow: hidden;
  border-radius: 50%;
  background: #2d3e4e;
  z-index: +1;
}

.user__media--round .media__image {
  position: absolute;
  top: 0;
  right: 0;
  max-width: none;
  max-width: 160%;
}

.section.user-title {
  position: relative;
  padding-top: 4.8rem;
  padding-bottom: 4.8rem;
}

.user__metas {
  -ms-flex: 1;
      flex: 1;
  background-color: white;
  color: #EE5722;
}

.user__metas h3 {
  font-size: 1.8rem;
  padding: 0.6rem;
}

.user__metas h3:first-child {
  margin-top: 0;
}

.user__metas > article {
  margin-bottom: 2.4rem;
}

.socials > *,
.contact > * {
  display: block;
  min-height: 2.4rem;
  margin-bottom: 1.2rem;
}

.status {
  margin-top: 2.4rem;
  color: #2d3e4e;
  font-weight: 700;
  font-style: italic;
  text-transform: uppercase;
}

.socials {
  margin-bottom: 1.2rem;
}

.social {
  border: none;
  position: relative;
  min-height: 6rem;
  margin-bottom: 1.2rem;
  display: block;
}

.social .social__icon {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -60%, 0);
  width: 6rem;
  height: 6rem;
  font-size: 6rem;
  line-height: 1;
  text-align: center;
  font-family: "FontAwesome";
  fill: #2d3e4e;
}

.social span {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  padding: 0.3rem 1.2rem;
  background-color: white;
  line-height: 1;
  font-style: italic;
  color: white;
}

.social span:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  transform: skewX(-7deg);
  background-color: #2d3e4e;
  z-index: -1;
}

.contact__phone {
  font-size: 1.8rem;
  font-style: italic;
}

.adress {
  margin-top: 1.2rem;
  font-style: italic;
  color: #888;
}

.adress__country {
  text-transform: uppercase;
}

/* TIMELINE */
.section--timeline h3 span:nth-child(3) {
  color: #888;
  font-weight: 400;
}

.timeline {
  position: relative;
  padding-top: 2.4rem;
  margin-left: 0;
  padding-left: 1.8rem;
  box-shadow: inset 0.18rem 0 0 0 #EE5722, -0.18rem 0 0 0 #EE5722;
}

.timeline .timeline__icon {
  position: absolute;
  left: -1.08rem;
  left: -0.9rem;
  width: 1.8rem;
  height: 1.8rem;
  fill: #EE5722;
}

.timeline .timeline__icon--top {
  top: -0.9rem;
}

.timeline .timeline__icon--bottom {
  bottom: -1.8rem;
}

.timeline .timeline__item {
  margin-bottom: 2.4rem;
}

.timeline .timeline__item > *:first-child {
  position: relative;
  padding-top: 0rem;
  margin-bottom: 1.2rem;
  line-height: 1;
  font-size: 1.8rem;
}

.timeline .timeline__item > *:first-child:before {
  content: "";
  display: inline-block;
  position: absolute;
  top: 0;
  left: -2.7rem;
  width: 1.8rem;
  height: 1.8rem;
  background-color: white;
  border-radius: 50%;
  box-shadow: inset 0 0 0 0.36rem #EE5722;
}

.timeline .timeline__item h3 {
  margin-top: 0;
}

.timeline .date-range {
  color: tomato;
  display: block;
  margin-bottom: 0.6rem;
  font-weight: 900;
  font-style: italic;
  letter-spacing: -0.2rem;
  line-height: 1;
  color: #969fa7;
}

@media (min-width: 60em) {
  .timeline .date-range {
    margin-bottom: 0;
    float: right;
    margin-top: 0rem;
  }
}

/* SECTION */
.section--timeline h3 span:nth-child(2):after, .section--tasks .section__body h3:after,
.section--tools .section__body h3:after,
.section--profile .section__body h3:after {
  content: " //";
  margin-right: 0.6rem;
}

.section__body h3 {
  text-transform: uppercase;
  font-size: 1.8rem;
  font-weight: 900;
  font-style: italic;
}

.section--tasks .section__body h3,
.section--tools .section__body h3,
.section--profile .section__body h3, .section--tasks .section__body h3 + *,
.section--tools .section__body h3 + *,
.section--profile .section__body h3 + * {
  display: inline;
}

/* Section - general */
.section {
  position: relative;
  padding: 3.6rem 2.4rem;
  padding-top: 3.6rem;
}

/* Section - title */
.section__title {
  position: absolute;
  top: 0;
  left: -2.4rem;
  transform: translate3d(0, -50%, 0);
  padding: 0.6rem 1.2rem;
  padding-left: 4.8rem;
  color: white;
  margin: 0;
  text-align: center;
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: 300;
  font-style: italic;
}

.section__title:before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  transform: skewX(-7deg);
  background-color: #2d3e4e;
  box-shadow: 0 1.5px 4px rgba(0, 0, 0, 0.24), 0 1.5px 6px rgba(0, 0, 0, 0.12);
  z-index: -1;
}

/* Section - body */
.section__body article {
  margin-bottom: 1.2rem;
}

.section__body p + p {
  margin-top: 1.2rem;
}

/* Color variants */
.cv__main {
  background-color: #2d3e4e;
}

.section--timeline {
  background-color: white;
  color: #444;
}

.section--timeline h3 {
  color: #EE5722;
}

.section--tools {
  background-color: #EE5722;
  color: white;
}

.section--tools h3 {
  color: #2d3e4e;
}

.section--tasks, .section--profile {
  background-color: #2d3e4e;
  color: white;
}

.section--tasks h3, .section--profile h3 {
  color: #EE5722;
}

/* TASKS */
.section--tasks article h3 {
  font-size: 2rem;
}

.print-only {
  display: none;
}

@media print {
  .print-only {
    display: block;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
